import sys
import pefile
import binascii
from pwn import *
from arc4 import ARC4

context.log_level='debug'
file = sys.argv[1]
pe = pefile.PE(file)

def get_config():
    #acum ca ai luat configu tre doar sa iti dai seama unde e cheia si sa decriptezi :)
    for section in pe.sections:
        #calc delta
        if b'.rsrc' in section.Name:
            payload_dropped = section.get_data()[0x60+16-4+16:]
            key = section.get_data()[(0x60+16-4):(0x60+32-5)]
    print("+++++++++++++++++++++++++++++++++++++++++++++++++\n")
    #print(hexdump(key))
    return (key,payload_dropped)

def decrypt_config():
    pass

def string_decrypt(y):
    v4 = ""
    rez = ""
    alphabet = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890./="
    for i in range(len(y)):
        if y[i] in alphabet:
            v6 = alphabet.index(y[i])
            #print(hex(v6))
            v7 = len(alphabet)
            if(v6 + 13 < v7):
                v8 = v6+13
            else:
                v8 = v6-v7+13
            v4 = alphabet[v8]
            rez += v4
    print(rez)

#string_decrypt(".5ea5/QPY4//")
#string_decrypt("s9a4E5fbhe35n")
#string_decrypt("yb14E5fbhe35")
#string_decrypt("F9m5b6E5fbhe35")
#string_decrypt("yb3.E5fbhe35")
#string_decrypt("I9egh1/n//b3")
rez = get_config()
key = rez[0]
print(key)
print(type(key))
cipher = ARC4(key)
rc4_data = cipher.decrypt(rez[1])
stage2 = rc4_data
f = open("stage2_challenge_mal_analysis.dll","wb")
f.write(rc4_data)
f.close()
